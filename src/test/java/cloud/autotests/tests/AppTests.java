package cloud.autotests.tests;

import io.qameta.allure.Description;
import org.junit.jupiter.api.*;

import static cloud.autotests.helpers.DriverHelper.getConsoleLogs;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;


public class AppTests extends TestBase {
    @Test
    @Description("Soon to be implemented by QA.GURU engineers")
    @DisplayName("Проверка доступности скачивания файла")
    void generatedTest() {
        step("Open https://telegram.org/", () -> {
            // todo
        });

        step("Link https://desktop.telegram.org/ should be visible", () -> {
            // todo
        });

        step("Go to the link https://desktop.telegram.org/", () -> {
            // todo
        });

        step("Button https://telegram.org/dl/desktop/win64 should be visible", () -> {
            // todo
        });

        step("Download file", () -> {
            // todo
        });
    }

    @Test
    @Description("Autogenerated, because test steps contain text 'http...' and the page has 'title' tag")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://telegram.org/'", () ->
            open("https://telegram.org/"));

        step("Page title should have text 'Telegram Messenger'", () -> {
            String expectedTitle = "Telegram Messenger";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated, because test steps contain text 'http...'")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://telegram.org/'", () ->
            open("https://telegram.org/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}